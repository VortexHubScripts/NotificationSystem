--// Load the Enhanced Notification Library v5 in v2 style
local fnl = (function()
    local lib = {}
    local TweenService = game:GetService("TweenService")

    local Converted = {
        ["_ScreenGui"] = Instance.new("ScreenGui");
        ["_Notifications"] = Instance.new("Frame");
        ["_Template"] = Instance.new("Frame");
        ["_UICorner"] = Instance.new("UICorner");
        ["_Title"] = Instance.new("TextLabel");
        ["_Description"] = Instance.new("TextLabel");
        ["_UIListLayout"] = Instance.new("UIListLayout");
        ["_Accent"] = Instance.new("Frame");
        ["_AccentCorner"] = Instance.new("UICorner");
        ["_Glow"] = Instance.new("ImageLabel");
        ["_ProgressBar"] = Instance.new("Frame");
        ["_ProgressFill"] = Instance.new("Frame");
        ["_ProgressCorner"] = Instance.new("UICorner");
    }

    local function HideUi(uiElement)
        if gethui then
            uiElement.Parent = gethui()
            return true
        elseif (syn and syn.protect_gui) then
            syn.protect_gui(uiElement)
            uiElement.Parent = game:GetService("CoreGui")
            return true
        end
        return false
    end

    local function RandomString(len)
        len = len or 32
        local chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"
        local str = ""
        for i = 1, len do
            str = str .. chars:sub(math.random(1, #chars), math.random(1, #chars))
        end
        return str
    end

    -- ScreenGui
    local sg = Converted["_ScreenGui"]
    sg.DisplayOrder = 999999999
    sg.ResetOnSpawn = false
    sg.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    sg.Name = RandomString()
    HideUi(sg)

    -- Notifications container
    local holder = Converted["_Notifications"]
    holder.AnchorPoint = Vector2.new(1, 1)
    holder.BackgroundTransparency = 1
    holder.Position = UDim2.new(1, -25, 1, -25)
    holder.Size = UDim2.new(0, 340, 0, 600)
    holder.Name = "Notifications"
    holder.Parent = sg

    -- Template
    local template = Converted["_Template"]
    template.AnchorPoint = Vector2.new(0.5, 0.5)
    template.BackgroundColor3 = Color3.fromRGB(20, 20, 24)
    template.BackgroundTransparency = 0.15
    template.BorderSizePixel = 0
    template.Position = UDim2.new(0.5, 0, 0.915, 0)
    template.Size = UDim2.new(0, 340, 0, 100)
    template.Visible = false
    template.ZIndex = 100
    template.Name = "Template"
    template.Parent = holder

    -- UICorner
    Converted["_UICorner"].CornerRadius = UDim.new(0, 14)
    Converted["_UICorner"].Parent = template

    -- Title
    local titleLabel = Converted["_Title"]
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.Text = "Notification"
    titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    titleLabel.TextSize = 16
    titleLabel.TextWrapped = true
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    titleLabel.BackgroundTransparency = 1
    titleLabel.Position = UDim2.new(0, 62, 0, 18)
    titleLabel.Size = UDim2.new(1, -78, 0, 20)
    titleLabel.Parent = template

    -- Description
    local descLabel = Converted["_Description"]
    descLabel.Font = Enum.Font.Gotham
    descLabel.Text = "This is your notification message"
    descLabel.TextColor3 = Color3.fromRGB(220, 220, 225)
    descLabel.TextSize = 14
    descLabel.TextWrapped = true
    descLabel.TextXAlignment = Enum.TextXAlignment.Left
    descLabel.TextYAlignment = Enum.TextYAlignment.Top
    descLabel.BackgroundTransparency = 1
    descLabel.Position = UDim2.new(0, 62, 0, 43)
    descLabel.Size = UDim2.new(1, -78, 0, 42)
    descLabel.Parent = template

    -- UIListLayout for stacking
    local layout = Converted["_UIListLayout"]
    layout.Padding = UDim.new(0, 10)
    layout.HorizontalAlignment = Enum.HorizontalAlignment.Right
    layout.SortOrder = Enum.SortOrder.LayoutOrder
    layout.VerticalAlignment = Enum.VerticalAlignment.Bottom
    layout.Parent = holder

    local baseNotif = template
    local notificationOrder = 0

    -- Animate notification
    local function animateNotification(notif, duration, dir)
        dir = dir or "in"
        local tweenInfo
        if dir == "in" then
            notif.Position = UDim2.new(1.5, 0, notif.Position.Y.Scale, notif.Position.Y.Offset)
            notif.BackgroundTransparency = 1
            tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.Out)
            TweenService:Create(notif, tweenInfo, {Position = UDim2.new(0.5, 0, notif.Position.Y.Scale, notif.Position.Y.Offset), BackgroundTransparency = 0.15}):Play()
        else
            tweenInfo = TweenInfo.new(0.4, Enum.EasingStyle.Back, Enum.EasingDirection.In)
            TweenService:Create(notif, tweenInfo, {Position = UDim2.new(1.5, 0, notif.Position.Y.Scale, notif.Position.Y.Offset), BackgroundTransparency = 1}):Play()
        end
    end

    -- Main notification function
    function lib:MakeNotification(nt)
        nt = nt or { Title = "Notification", Text = "This is a test notification.", Duration = 5 }
        notificationOrder = notificationOrder + 1

        -- Create notification clone
        local newNotif = baseNotif:Clone()
        newNotif.Parent = holder
        newNotif.Title.Text = nt.Title
        newNotif.Description.Text = nt.Text
        newNotif.Visible = true
        newNotif.Name = "EnhancedNotification"
        newNotif.LayoutOrder = notificationOrder

        -- Animate in
        animateNotification(newNotif, nt.Duration, "in")

        -- Auto-dismiss
        task.delay(nt.Duration, function()
            if newNotif.Parent then
                animateNotification(newNotif, nil, "out")
                task.wait(0.4)
                if newNotif.Parent then newNotif:Destroy() end
            end
        end)
    end

    return lib
end)()

-- Simple global helper
function notify(title, text, duration)
    fnl:MakeNotification({Title = title or "Notification", Text = text or "No message", Duration = duration or 5})
end

--[[ Example Usage:
notify("Success!", "Operation completed", 4)
task.wait(1)
notify("Warning", "This is a warning", 5)
--]]
