--// Enhanced Notification Library v4
--// Modern, fluid notification system with stacking

local lib = {}
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")

local RandomString
do
	function RandomString(len)
		len = len or 50
		local sets = {{97, 122}, {65, 90}, {48, 57}}
		local str = ""
		for i = 1, len do
			math.randomseed(tick() * 1000 + i)
			local charset = sets[math.random(1, #sets)]
			str = str .. string.char(math.random(charset[1], charset[2]))
		end
		return str
	end
end

-- Create ScreenGui
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.DisplayOrder = 999999999
ScreenGui.ResetOnSpawn = false
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ScreenGui.IgnoreGuiInset = true
ScreenGui.Name = RandomString(32)
ScreenGui.Parent = game:GetService("CoreGui")

-- Container
local Container = Instance.new("Frame")
Container.AnchorPoint = Vector2.new(1, 1)
Container.BackgroundTransparency = 1
Container.BorderSizePixel = 0
Container.Position = UDim2.new(1, -20, 1, -20)
Container.Size = UDim2.new(0, 380, 0, 700)
Container.Name = "NotificationContainer"
Container.Parent = ScreenGui

local UIListLayout = Instance.new("UIListLayout")
UIListLayout.Padding = UDim.new(0, 12)
UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Right
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout.VerticalAlignment = Enum.VerticalAlignment.Bottom
UIListLayout.Parent = Container

-- Notification Template
local function createTemplate()
	local Template = Instance.new("Frame")
	Template.AnchorPoint = Vector2.new(0.5, 0.5)
	Template.BackgroundColor3 = Color3.fromRGB(16, 18, 24)
	Template.BackgroundTransparency = 0.05
	Template.BorderSizePixel = 0
	Template.Size = UDim2.new(1, 0, 0, 110)
	Template.Visible = false

	local UICorner = Instance.new("UICorner")
	UICorner.CornerRadius = UDim.new(0, 16)
	UICorner.Parent = Template

	local Glow = Instance.new("ImageLabel")
	Glow.Image = "rbxassetid://5028857084"
	Glow.ImageColor3 = Color3.fromRGB(99, 102, 241)
	Glow.ImageTransparency = 0.65
	Glow.ScaleType = Enum.ScaleType.Slice
	Glow.SliceCenter = Rect.new(24, 24, 276, 276)
	Glow.AnchorPoint = Vector2.new(0.5, 0.5)
	Glow.BackgroundTransparency = 1
	Glow.Position = UDim2.new(0.5, 0, 0.5, 0)
	Glow.Size = UDim2.new(1, 50, 1, 50)
	Glow.ZIndex = 99
	Glow.Name = "Glow"
	Glow.Parent = Template

	local Accent = Instance.new("Frame")
	Accent.AnchorPoint = Vector2.new(0, 0.5)
	Accent.BackgroundColor3 = Color3.fromRGB(99, 102, 241)
	Accent.BorderSizePixel = 0
	Accent.Position = UDim2.new(0, 0, 0.5, 0)
	Accent.Size = UDim2.new(0, 4, 0, 0)
	Accent.ZIndex = 102
	Accent.Name = "Accent"
	Accent.Parent = Template
	local accentCorner = Instance.new("UICorner")
	accentCorner.CornerRadius = UDim.new(1, 0)
	accentCorner.Parent = Accent

	local ProgressBar = Instance.new("Frame")
	ProgressBar.AnchorPoint = Vector2.new(0.5, 1)
	ProgressBar.BackgroundColor3 = Color3.fromRGB(30, 32, 40)
	ProgressBar.BackgroundTransparency = 0.2
	ProgressBar.BorderSizePixel = 0
	ProgressBar.Position = UDim2.new(0.5, 0, 1, 0)
	ProgressBar.Size = UDim2.new(1, 0, 0, 4)
	ProgressBar.ZIndex = 103
	ProgressBar.Name = "ProgressBar"
	ProgressBar.Parent = Template

	local ProgressFill = Instance.new("Frame")
	ProgressFill.BackgroundColor3 = Color3.fromRGB(99, 102, 241)
	ProgressFill.BorderSizePixel = 0
	ProgressFill.Size = UDim2.new(1, 0, 1, 0)
	ProgressFill.ZIndex = 104
	ProgressFill.Name = "ProgressFill"
	ProgressFill.Parent = ProgressBar
	local progressCorner = Instance.new("UICorner")
	progressCorner.CornerRadius = UDim.new(0, 16)
	progressCorner.Parent = ProgressBar

	local Title = Instance.new("TextLabel")
	Title.Font = Enum.Font.GothamBold
	Title.Text = "Notification"
	Title.TextColor3 = Color3.fromRGB(255, 255, 255)
	Title.TextSize = 17
	Title.TextWrapped = true
	Title.TextXAlignment = Enum.TextXAlignment.Left
	Title.BackgroundTransparency = 1
	Title.Position = UDim2.new(0, 70, 0, 22)
	Title.Size = UDim2.new(1, -115, 0, 22)
	Title.ZIndex = 105
	Title.Name = "Title"
	Title.Parent = Template

	local Description = Instance.new("TextLabel")
	Description.Font = Enum.Font.Gotham
	Description.Text = "This is your notification message"
	Description.TextColor3 = Color3.fromRGB(200, 205, 215)
	Description.TextSize = 14
	Description.TextTransparency = 0.15
	Description.TextWrapped = true
	Description.TextXAlignment = Enum.TextXAlignment.Left
	Description.TextYAlignment = Enum.TextYAlignment.Top
	Description.BackgroundTransparency = 1
	Description.Position = UDim2.new(0, 70, 0, 48)
	Description.Size = UDim2.new(1, -115, 0, 46)
	Description.ZIndex = 105
	Description.Name = "Description"
	Description.Parent = Template

	local Icon = Instance.new("ImageLabel")
	Icon.Image = "rbxassetid://7072706001"
	Icon.ImageColor3 = Color3.fromRGB(255, 255, 255)
	Icon.AnchorPoint = Vector2.new(0.5, 0.5)
	Icon.BackgroundColor3 = Color3.fromRGB(99, 102, 241)
	Icon.BackgroundTransparency = 0.1
	Icon.BorderSizePixel = 0
	Icon.Position = UDim2.new(0, 36, 0.5, 0)
	Icon.Size = UDim2.new(0, 42, 0, 42)
	Icon.ZIndex = 105
	Icon.Name = "Icon"
	Icon.Parent = Template
	local iconCorner = Instance.new("UICorner")
	iconCorner.CornerRadius = UDim.new(0, 12)
	iconCorner.Parent = Icon

	local CloseButton = Instance.new("TextButton")
	CloseButton.AnchorPoint = Vector2.new(1, 0)
	CloseButton.BackgroundColor3 = Color3.fromRGB(40, 42, 50)
	CloseButton.BackgroundTransparency = 0.3
	CloseButton.BorderSizePixel = 0
	CloseButton.Position = UDim2.new(1, -12, 0, 12)
	CloseButton.Size = UDim2.new(0, 28, 0, 28)
	CloseButton.ZIndex = 106
	CloseButton.Font = Enum.Font.GothamBold
	CloseButton.Text = "Ã—"
	CloseButton.TextColor3 = Color3.fromRGB(200, 205, 215)
	CloseButton.TextSize = 20
	CloseButton.Name = "CloseButton"
	CloseButton.Parent = Template
	local closeCorner = Instance.new("UICorner")
	closeCorner.CornerRadius = UDim.new(0, 8)
	closeCorner.Parent = CloseButton

	local UIStroke = Instance.new("UIStroke")
	UIStroke.Color = Color3.fromRGB(60, 65, 80)
	UIStroke.Thickness = 1
	UIStroke.Transparency = 0.3
	UIStroke.Parent = Template

	return Template
end

local baseTemplate = createTemplate()
local notifHeight = 110
local spacing = 12

-- Function to update all notification positions
local function updateNotificationPositions()
	local children = {}
	for _, notif in ipairs(Container:GetChildren()) do
		if notif:IsA("Frame") and notif.Visible then
			table.insert(children, notif)
		end
	end
	table.sort(children, function(a, b) return a.LayoutOrder > b.LayoutOrder end)
	for i, notif in ipairs(children) do
		local goal = {Position = UDim2.new(0.5, 0, 1, -((notifHeight + spacing) * (i-1) + 20))}
		TweenService:Create(notif, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), goal):Play()
	end
end

-- Main function
function lib:MakeNotification(nt)
	nt = nt or {Title = "Notification", Text = "This is a test notification.", Duration = 5}
	local notif = baseTemplate:Clone()
	notif.Name = "ActiveNotification_" .. RandomString(8)
	notif.Title.Text = nt.Title or "Notification"
	notif.Description.Text = nt.Text or "No message provided."
	notif.Visible = true
	notif.LayoutOrder = tick()
	notif.Parent = Container

	-- Animate notification in
	notif.Position = UDim2.new(1.2, 0, 1, -20)
	notif.Size = UDim2.new(1, -20, 0, notifHeight)
	notif.BackgroundTransparency = 1
	TweenService:Create(notif, TweenInfo.new(0.5, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out), {
		Position = UDim2.new(0.5, 0, 1, -20),
		BackgroundTransparency = 0.05
	}):Play()

	-- Update all notifications to move older ones up
	task.delay(0.05, updateNotificationPositions)

	-- Auto-destroy after duration
	if nt.Duration then
		task.delay(nt.Duration, function()
			if notif and notif.Parent then
				TweenService:Create(notif, TweenInfo.new(0.4, Enum.EasingStyle.Back, Enum.EasingDirection.In), {
					Position = notif.Position + UDim2.new(0, 0, 0, -30),
					BackgroundTransparency = 1,
					Size = UDim2.new(1, -20, 0, notifHeight)
				}):Play()
				task.wait(0.5)
				if notif.Parent then notif:Destroy() end
				task.delay(0.05, updateNotificationPositions)
			end
		end)
	end

	-- Close button
	notif.CloseButton.MouseButton1Click:Connect(function()
		if notif.Parent then
			TweenService:Create(notif, TweenInfo.new(0.4, Enum.EasingStyle.Back, Enum.EasingDirection.In), {
				Position = notif.Position + UDim2.new(0, 0, 0, -30),
				BackgroundTransparency = 1,
				Size = UDim2.new(1, -20, 0, notifHeight)
			}):Play()
			task.wait(0.5)
			if notif.Parent then notif:Destroy() end
			task.delay(0.05, updateNotificationPositions)
		end
	end)

	return notif
end

return lib
